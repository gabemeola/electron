From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mack Straight <mack@discordapp.com>
Date: Tue, 1 Feb 2022 04:45:11 +0000
Subject: add discord ffmpeg config options.

changes:
 - support gif decoder (video backgrounds)
 - support hevc decoder (codec diversity)
 - support mp4 muxer (clips)
 - support file protocol (clips)
 - add .sigs entries needed by clips

diff --git a/chromium/ffmpeg.sigs b/chromium/ffmpeg.sigs
index 83c90539b18b848aeae528d33b5d0cbec55c4fe4..563dcafe37995fd9c59db68ab8ad070b139dc8bb 100755
--- a/chromium/ffmpeg.sigs
+++ b/chromium/ffmpeg.sigs
@@ -71,3 +71,46 @@ AVFrame *av_frame_clone(const AVFrame *src);
 void av_frame_unref(AVFrame *frame);
 void av_frame_free(AVFrame **frame);
 AVFrame* av_frame_alloc();
+
+
+//------------------------------------------------
+// functions from avutil used in Discord Clips feature
+//------------------------------------------------
+int av_buffer_make_writable(AVBufferRef **buf);
+int av_channel_layout_copy(AVChannelLayout *dst, const AVChannelLayout *src);
+AVFrame *av_frame_alloc(void);
+int av_frame_get_buffer(AVFrame *frame, int align);
+int av_frame_make_writable(AVFrame *frame);
+void av_log_format_line(void *ptr, int level, const char *fmt, va_list vl, char *line, int line_size, int *print_prefix);
+void av_log_set_callback(void (*callback)(void*, int, const char*, va_list));
+void av_log_set_level(int level);
+
+
+//------------------------------------------------
+// functions from avformat used in Discord Clips feature
+//------------------------------------------------
+void av_dump_format(AVFormatContext *ic, int index, const char *url, int is_output);
+const AVOutputFormat *av_guess_format(const char *short_name, const char *filename, const char *mime_type);
+int av_interleaved_write_frame(AVFormatContext *s, AVPacket *pkt);
+int av_write_trailer(AVFormatContext *s);
+int avformat_alloc_output_context2(AVFormatContext **ctx, const AVOutputFormat *oformat, const char *format_name, const char *filename);
+void avformat_free_context(AVFormatContext *s);
+AVStream *avformat_new_stream(AVFormatContext *s, const AVCodec *c);
+int avformat_write_header(AVFormatContext *s, AVDictionary **options);
+int avio_close(AVIOContext *s);
+int avio_open(AVIOContext **s, const char *url, int flags);
+
+
+//------------------------------------------------
+// functions from avcodec used in Discord Clips feature
+//------------------------------------------------
+int av_new_packet(AVPacket *pkt, int size);
+AVPacket *av_packet_alloc(void);
+void av_packet_free(AVPacket **pkt);
+void av_packet_rescale_ts(AVPacket *pkt, AVRational tb_src, AVRational tb_dst);
+void av_packet_unref(AVPacket *pkt);
+AVCodecContext *avcodec_alloc_context3(const AVCodec *codec);
+const AVCodec *avcodec_find_encoder(enum AVCodecID id);
+int avcodec_open2(AVCodecContext *avctx, const AVCodec *codec, AVDictionary **options);
+int avcodec_receive_packet(AVCodecContext *avctx, AVPacket *avpkt);
+int avcodec_send_frame(AVCodecContext *avctx, const AVFrame *frame);
diff --git a/chromium/scripts/build_ffmpeg.py b/chromium/scripts/build_ffmpeg.py
index 3a427363f9683b56a3ea5ea37af2f6d9e546261f..c04ce1f2bc3f79fecf8949f03d972d8dfc9d42e3 100755
--- a/chromium/scripts/build_ffmpeg.py
+++ b/chromium/scripts/build_ffmpeg.py
@@ -701,8 +701,8 @@ def ConfigureAndBuild(target_arch, target_os, host_os, host_arch, parallel_jobs,
       # Common codecs.
       '--enable-decoder=vorbis,libopus,flac',
       '--enable-decoder=pcm_u8,pcm_s16le,pcm_s24le,pcm_s32le,pcm_f32le,mp3',
-      '--enable-decoder=pcm_s16be,pcm_s24be,pcm_mulaw,pcm_alaw',
-      '--enable-demuxer=ogg,matroska,wav,flac,mp3,mov',
+      '--enable-decoder=pcm_s16be,pcm_s24be,pcm_mulaw,pcm_alaw,gif',
+      '--enable-demuxer=ogg,matroska,wav,flac,mp3,mov,gif',
       '--enable-parser=opus,vorbis,flac,mpegaudio,vp9',
 
       # Setup include path so Chromium's libopus can be used.
@@ -986,9 +986,12 @@ def ConfigureAndBuild(target_arch, target_os, host_os, host_arch, parallel_jobs,
 
   # Google Chrome & ChromeOS specific configuration.
   configure_flags['Chrome'].extend([
-      '--enable-decoder=aac,h264',
+      '--enable-decoder=aac,h264,hevc',
       '--enable-demuxer=aac',
-      '--enable-parser=aac,h264',
+      '--enable-parser=aac,h264,hevc',
+      '--enable-muxer=mp4',
+      '--enable-encoder=aac',
+      '--enable-protocol=file',
   ])
 
   # Google ChromeOS specific configuration.
